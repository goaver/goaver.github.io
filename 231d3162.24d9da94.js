(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{61:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return c})),i.d(t,"metadata",(function(){return l})),i.d(t,"rightToc",(function(){return s})),i.d(t,"default",(function(){return d}));var n=i(2),a=i(6),r=(i(0),i(75)),c={id:"checkgroups",title:"Check Groups",sidebar_label:"Check Groups"},l={unversionedId:"checkgroups",id:"checkgroups",isDocsHomePage:!1,title:"Check Groups",description:"A Check Group is an organizational unit for a collection of Verification Checks and / or Watchlist Searches that also provide the default configuration settings for any entities created within the group. Check groups are created and configured via the Aver portal.",source:"@site/docs/checkgroups.md",slug:"/checkgroups",permalink:"/docs/checkgroups",version:"current",sidebar_label:"Check Groups",sidebar:"someSidebar",previous:{title:"Watchlist Search",permalink:"/docs/watchlist"},next:{title:"Reading Check Results",permalink:"/docs/readingcheckresults"}},s=[{value:"Check Type Settings",id:"check-type-settings",children:[{value:"Check Types",id:"check-types",children:[]},{value:"Facial Recognition Analysis Options",id:"facial-recognition-analysis-options",children:[]},{value:"Additional Required Document(s)",id:"additional-required-documents",children:[]}]},{value:"Check Watchlist Settings",id:"check-watchlist-settings",children:[{value:"Watchlist Search Categories",id:"watchlist-search-categories",children:[]},{value:"Adverse Media Search",id:"adverse-media-search",children:[]},{value:"Watchlist Search Interval",id:"watchlist-search-interval",children:[]}]},{value:"Check Warning Settings",id:"check-warning-settings",children:[{value:"Identity Warnings",id:"identity-warnings",children:[]},{value:"Access Location",id:"access-location",children:[]},{value:"Email Warnings",id:"email-warnings",children:[]},{value:"Address Warnings",id:"address-warnings",children:[]},{value:"Phone Warnings",id:"phone-warnings",children:[]},{value:"Watchlist and Adverse Media Warnings",id:"watchlist-and-adverse-media-warnings",children:[]},{value:"Geographic Restriction Warnings",id:"geographic-restriction-warnings",children:[]}]},{value:"Overriding Check Group Settings",id:"overriding-check-group-settings",children:[]}],o={rightToc:s};function d(e){var t=e.components,i=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},o,i,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"A Check Group is an organizational unit for a collection of Verification Checks and / or Watchlist Searches that also provide the default configuration settings for any entities created within the group. Check groups are created and configured via the Aver portal."),Object(r.b)("p",null,Object(r.b)("b",null,"It is important to be aware that check groups have an entity limit of 1M Verification Checks and 1M Watchlist Searches"),".  Monitoring the number of entities created within a given check group is important to ensure you are not close to exceeding the capacity of the group.  Best practice for high-volume implementations would be to segment your checks into groups or to create new check groups and roll forward at a known interval (ie: yearly), depending on volume.  In most cases this is a non-issue, however for high-volume integrations it is important to be aware of."),Object(r.b)("h2",{id:"check-type-settings"},"Check Type Settings"),Object(r.b)("p",null,"Check type settings determine what check types, liveness requirements, and supplemental documents are performed or required for any check created within the group."),Object(r.b)("h3",{id:"check-types"},"Check Types"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Document Verification")," - Identification document verification"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Facial Recognition Analysis")," - Added liveness detection by requiring a user selfie to facial match to the identification document"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"E-Mail Verification")," - E-Mail address to verify for the individual"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Address Verification")," - Physical mailing address to verify for the individual"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Phone Verification")," - Phone number to verify for the individual"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Watchlist Search")," - Automatically perform a watchlist search using verified information from the identification check process"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Visual Watchlist")," - Use identification document and selfie to face match against visual databases to determine potential use of an alias"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Accredited Investor")," - Verify documentation to determine that the individual is an accredited investor"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Covid Vaccination Verification")," - Verify documentation to determine that the individual is COVID-19 vaccinated")),Object(r.b)("h3",{id:"facial-recognition-analysis-options"},"Facial Recognition Analysis Options"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Enhanced Liveness Capture")," - Require a second selfie from the individual requiring a randomly requested pose to perform enhanced liveness detection")),Object(r.b)("h3",{id:"additional-required-documents"},"Additional Required Document(s)"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Utility Bill")," - User must provide image(s) of their utility bill"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Tax Document")," - User must provide image(s) of their tax document"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Bank or Credit Card")," - User must provide image(s) of their bank or credit card"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Medical Card")," - User must provide image(s) of their medical card")),Object(r.b)("h2",{id:"check-watchlist-settings"},"Check Watchlist Settings"),Object(r.b)("p",null,"The check watchlist settings determine whether or not a watchlist search is automatically performed and associated with the verified identity after the check is complete."),Object(r.b)("h3",{id:"watchlist-search-categories"},"Watchlist Search Categories"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Criminal")," - lists containing criminal activity such as most wanted and fugitive lists"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Terrorism")," - lists containing known terrorism incidents foreign and domestic"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Financial Crimes")," - lists containing incidents around financial crimes and securities fraud"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Financial Notices")," - lists with financial notices"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Borrower Defaults")," - lists with borrower defaults such as student loan defaults"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Political")," - lists with politically exposed persons and other political sanctions"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Medical")," - lists for medicare / medicaid violations and other medical license related sanctions"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Sexual Offenses")," - lists containing sexual offenses"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Gambling and Gaming")," - lists of individuals barred from gambling and gaming control board bans"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Education")," - lists containing education related restrictions")),Object(r.b)("h3",{id:"adverse-media-search"},"Adverse Media Search"),Object(r.b)("p",null,"When enabled,the search will also perform a web search to find published articles with the search criteria for any potential criminal and civil offenses."),Object(r.b)("h3",{id:"watchlist-search-interval"},"Watchlist Search Interval"),Object(r.b)("p",null,"Setting a watchlist search interval will automatically re-run the same watchlist search criteria at scheduled intervals (weekly, monthly, quarterly, etc)"),Object(r.b)("h2",{id:"check-warning-settings"},"Check Warning Settings"),Object(r.b)("p",null,"The check warnings configure the criteria in which to display a warning if the verification check or watchlist search fall within the restricted criteria.  "),Object(r.b)("b",null,"NOTE:")," This feature is only available for plans that support check warnings and advanced API functionality.",Object(r.b)("h3",{id:"identity-warnings"},"Identity Warnings"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Identification Document Used Previously")," - warn if the identification document has been used in a previous check"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Email Address Used Previously")," - warn if the e-mail address has been used in a previous check"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Name and Locale Used Previously")," - warn if the name and location has been used in a previous check"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Applicant Underage")," - warn if the applicant is under the age of 18")),Object(r.b)("h3",{id:"access-location"},"Access Location"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Accessed over VPN or TOR")," - warn if the applicant IP address is using a VPN or TOR address")),Object(r.b)("h3",{id:"email-warnings"},"Email Warnings"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Email Address Invalid")," - warn if the e-mail address is invalid or suspect")),Object(r.b)("h3",{id:"address-warnings"},"Address Warnings"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Address Invalid or Fraud Reported")," - warn if the mailing address is invalid or fraud has been reported")),Object(r.b)("h3",{id:"phone-warnings"},"Phone Warnings"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Phone Invalid or Inactive")," - warn if the phone number is invalid or inactive"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"VOIP or Prepaid")," - warn if the phone number is a VOIP or prepaid / disposable number")),Object(r.b)("h3",{id:"watchlist-and-adverse-media-warnings"},"Watchlist and Adverse Media Warnings"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Watchlist Search Hits Found")," - warn if any watchlist search hits were found if the watchlist search was automatically performed as part of the check"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Adverse Media Hits Found")," - warn if any adverse media search hits were found if the adverse media search was automatically performed as part of the check")),Object(r.b)("h3",{id:"geographic-restriction-warnings"},"Geographic Restriction Warnings"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Restricted Countries")," - warn if the identity of the individual resides in a restricted country"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Restricted US States")," - warn if the identity of the individual resides in a restricted US State"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("b",null,"Restricted Canadian Provinces")," - warn if the identity of the individual resides in a restricted Canadian Province")),Object(r.b)("h2",{id:"overriding-check-group-settings"},"Overriding Check Group Settings"),Object(r.b)("p",null,"Check group settings can be overridden on a per-check basis when creating a check via the API.  Refer to ",Object(r.b)("a",{href:"/docs/check"},"Create a Check")))}d.isMDXComponent=!0},75:function(e,t,i){"use strict";i.d(t,"a",(function(){return b})),i.d(t,"b",(function(){return p}));var n=i(0),a=i.n(n);function r(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function c(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?c(Object(i),!0).forEach((function(t){r(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):c(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function s(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)i=r[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var o=a.a.createContext({}),d=function(e){var t=a.a.useContext(o),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},b=function(e){var t=d(e.components);return a.a.createElement(o.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},h=a.a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,r=e.originalType,c=e.parentName,o=s(e,["components","mdxType","originalType","parentName"]),b=d(i),h=n,p=b["".concat(c,".").concat(h)]||b[h]||u[h]||r;return i?a.a.createElement(p,l(l({ref:t},o),{},{components:i})):a.a.createElement(p,l({ref:t},o))}));function p(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=i.length,c=new Array(r);c[0]=h;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var o=2;o<r;o++)c[o]=i[o];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,i)}h.displayName="MDXCreateElement"}}]);